[
{
	"uri": "//localhost:1313/vi/1-introduction/1.1-transit-gateway/",
	"title": "AWS Transit Gateway",
	"tags": [],
	"description": "",
	"content": "Trong phần này chúng ta sẽ cùng tìm hiểu AWS Transit Gateway là gì và tại sao tính năng này lại cần thiết.\nAmazon VPC và VPC Peering Amazon Virtual Private Cloud (VPC) là một mạng ảo nằm cô lập trong AWS Cloud. Amazon VPC rất giống với mạng truyền thống, cho phép người dùng triển khai các máy chủ, cơ sở dữ liệu và các tài nguyên máy tính khác.\nTrên thực tế, có rất nhiều trường hợp chúng ta cần kết nối hai hoặc nhiều VPC với nhau để chia sẻ tài nguyên, dữ liệu giữa các mạng này. Cách đơn giản nhất để kết nối các mạng này là đi qua đường truyền Internet, tuy nhiên cách này tiềm ẩn rất nhiều rủi ro về bảo mật, không đáng tin cậy và không đảm bảo hiệu suất.\nVPC Peering là tính năng cho phép kết nối hai hoặc nhiều Amazon VPC với nhau thông qua hệ thống mạng riêng của AWS, không sử dụng đường truyền Internet. Khi sử dụng VPC Peering để kết nối 2 VPC, các tài nguyên trong một mạng có thể kết nối với các tài nguyên trong mạng còn lại thông qua địa chỉ IP riêng tư như thể chúng nằm trong cùng một mạng. Tuy VPC Peering là một tính năng hiệu quả để kết nối các VPC với nhau nhưng nó cũng có một số nhược điểm. Một trong số đó phải kể đến là khi phải số lượng kết nối lớn khi cần kết nối nhiều VPC. VPC Peering có đặc điểm là không có tính chất bắc cầu, tức là trong trường hợp VPC A đã peering với VPC B, VPC B đã peering với VPC C thì VPC A không kết nối được đến VPC C. Ngoài ra một Amazon VPC không thể peering với quá nhiều VPC khác. Khi cần kết nối nhiều VPC với nhau, cấu hình định tuyến sẽ trở nên rất phức tạp và khó quản lý cũng như xử lý sự cố.\nAWS Transit Gateway AWS Transit Gateway là một tính năng mạnh mẽ của VPC cho phép kết nối nhiều VPC, VPN connection, mạng on-premises với một cổng duy nhất. AWS Transit Gateway giúp đơn giản hoá cấu hình mạng bằng cách loại bỏ các kết nối ngang hàng giữa các VPC với nhau, các VPC sẽ kết nối đến một hub trung tâm duy nhất, đóng vai trò điều hướng lưu lượng truy cập mạng. So với VPC Peering, AWS Transit Gateway có một số ưu điểm sau:\nNâng cao hiệu suất: Transit Gateway mang lại hiệu suất tốt hơn nhiều bằng việc tận dụng cơ chế định tuyến tập trung, giảm chi phí liên quan đến các kết nối ngang hàng giữa các VPC. Đơn giản hoá việc quản lý: Bằng cách loại bỏ các kết nối ngang hàng giữa các VPC, tất cả các cấu hình định tuyến được quản lý tập trung giúp cho việc quản lý trở nên dễ dàng hơn nhiều. Khả năng mở rộng: Transit Gateway có khả năng mở rộng cao, có khả năng xử lý số lượng lớn VPC và kết nối mà không ảnh hưởng đến hiệu và khả năng quản lý. Điều này làm cho nó trở nên lý tưởng cho việc cấu hình mạng quy mô lớn. Cải thiện khả năng khắc phục sự cố: Việc khắc phục sự cố mạng trở nên dễ dàng hơn với Transit Gateway vì kiến trúc tập trung cung cấp cái nhìn tổng quan, rõ rằng về lưu lượng mạng và đơn giản háo việc xác định các sự cố định tuyến. Vì những ưu điểm này, AWS Transit Gateway đã trở thành lựa chọn phổ biến để triển khai các cấu hình mạng phức tạp. Nó đặc biệt phù hợp với các tổ chức cần triển khai hệ thống quy mô lớn, cần kết nối nhiều VPC, VPN Connection và mạng on-premises trong khi vẫn đảm bảo hiệu suất, khả năng quản lý và mở rộng. Để sử dụng hiệu quả Transit Gateway, cần phải hiểu được các tình huống có thể liên quan:\nCác VPC nằm trên cùng tài khoản AWS, cùng region Các VPC nằm trên cùng tài khoản AWS, khác region Các VPC nằm trên khác tài khoản AWS, cùng region Các VPC nằm trên khác tài khoản AWS, khác region Bằng cách hiểu rõ những tình huống này, bạn có thể sử dụng AWS Transit Gateway một cách hiệu quả để kết nối nhiều VPC trên các cấu hình khác nhau, đơn giản hóa việc quản lý mạng và nâng cao hiệu suất mạng.\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "AWS Transit Gateway Workshop",
	"tags": [],
	"description": "",
	"content": "AWS Transit Gateway Workshop Chào mừng bạn đến với AWS Transit Gateway workshop. Workshop này trang bị cho bạn kiến thức và kỹ năng để tự tin quản lý và tận dụng các chức năng của AWS Transit Gateway trong mạng đám mây của bạn.\nThông qua một loạt các bài tập thực hành và các tình huống thực tế, bạn sẽ hiểu sâu hơn về các chức năng của nó và kỹ thuật cấu hình. Khi hoàn thành workshop, bạn sẽ trở nên tự tin hơn khi làm việc với công cụ mạng mạnh mẽ này, sẵn sàng khai thác khả năng của nó để kết nối các VPC Amazon của bạn một cách dễ dàng. Nội dung Giới thiệu Chuẩn bị Cùng tài khoản - Cùng Region Cùng tài khoản - Khác Region Clean Up "
},
{
	"uri": "//localhost:1313/vi/3-single-account-single-region/3.1-preparation/",
	"title": "Chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cùng triển khai các tài nguyên như VPC và máy ảo EC2 để chuẩn bị cho các bước cấu hình mạng tiếp theo. Trong các bước tiếp theo, cấu hình mạng sẽ tương đối phức tạp, đặt biệt là route table. Vì mục tiêu chính của workshop này là hiểu được cách hoạt động của AWS Transit Gateway nên trong mỗi VPC, chúng ta sẽ chỉ tạo 1 EC2 instance để kiểm tra kết nối đến EC2 instance trong các VPC khác sau khi đã cấu hình mạng.\nTriển khai CloudFormation Stack Chúng ta sẽ triển khai ba VPC như sau bằng dịch vụ CloudFormation. 1. Tại giao diện của AWS Console:\nTìm kiếm từ khoá: cloudformation Chọn CloudFormation 2. Tại giao diện của CloudFormation:\nBấm Create stack Chọn Upload a template file Bấm Choose file Chọn file TransitGatewayWorkshop.yaml để tải lên Bấm Next 3. Bạn có thể đặt tên bất kỳ cho stack (VD: TransitGatewayWorkshop). Làm theo các bước sau đây để lấy EC2 AMI:\nTìm kiếm từ khoá ec2 rồi mở dịch vụ EC2 trong cửa số mới Tạo EC2 instance mới rồi kéo xuống phần cấu hình Amazon Machine Image (AMI) Sao chép AMI ID Quay lại cửa sổ CloudFormation rồi thay thế AMI ID bạn vừa copy vào sau đó bấm Next Kéo xuống cuối trang rồi bấm Next Tiếp tục kéo xuống cuối trang rồi bấm Submit Hãy đợi vài phút để CloudFormation tạo thành công trước khi chuyển sang bước tiếp theo. "
},
{
	"uri": "//localhost:1313/vi/4-single-account-cross-region/4.1-preparation/",
	"title": "Chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Trong bước này chúng ta sẽ triển khai các tài nguyên như VPC, EC2 instance, AWS Transit Gateway và bảng định tuyến trong region ap-southeast-1 (Singapore).\nCloudFormation Stack Phần triển khai này rất giống với phần trước, chỉ có một vài điểm cần lưu ý sau đây:\nSử dụng file VPC.yaml Điền các tham số như sau:\nStack name: BranchVPC EC2InstanceAMIId: Chọn AMI ID của Amazon Linux 2023 SubnetCidr: 10.4.0.0/24 VPCCidr: 10.4.0.0/16 VPCPrefix: branch Transit Gateway 1. Truy cập dịch vụ VPC, chọn Transit gateways rồi bấm Create transit gateway Cấu hình transit gateway như sau:\nName tag: singapore-tgw Description: Transit Gateway for region Singapore Bỏ chọn Default route table association và Default route table propagation Bỏ chọn default route table association và propagation để khi các attachment mới được tạo ra không tự tạo association và propagation với bảng định tuyến mặc định.\n2. Tạo một transit gateway attachment nữa với cấu hình như sau\nName tag: branch-att Transit gateway ID: Chọn singapore-tgw Attachment Type: VPC VPC ID: Chọn branch-vpc 3. Tạo transit gateway route table mới và liên kết với attachment\nTại giao diện Transit gateway route tables của region Singapore, bấm Create transit gateway route table Điền các thông tin cấu hình như sau:\nName tag: branch-tgw-rtb Transit gateway ID: singapore-tgw Sau khi tạo xong branch-tgw-rtb thì chọn tab Associations rồi bấm Create association rồi liên kết với branch-att attachment. Hãy mở sẵn 2 tab chọn region Tokyo và Singapore trong trình duyệt của bạn để tiết kiệm thời gian khi cấu hình.\n"
},
{
	"uri": "//localhost:1313/vi/1-introduction/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Trong phần này chúng ta sẽ cùng tìm hiểu về AWS Transit Gateway và cơ chế định tuyến của nó.\nNội dung AWS Transit Gateway Cơ chế định tuyến của AWS Transit Gateway "
},
{
	"uri": "//localhost:1313/vi/1-introduction/1.2-routing/",
	"title": "AWS Transit Gateway Routing",
	"tags": [],
	"description": "",
	"content": "In this section, we will learn about the routing mechanism of AWS Transit Gateway.\nAWS Transit Gateway Attachment AWS Transit Gateway Attachment là một kết nối logic giữa một tài nguyên và AWS Transit Gateway. Tài nguyên này có thể là VPC, kết nối VPN, cổng Direct Connect hoặc các loại tài nguyên khác được hỗ trợ. Khi một Transit Gateway attachment mới được tạo, nó sẽ được liên kết với bảng định tuyến mặc định của Transit Gateway đó. Bạn có thể thay đổi hành vi này trong phần cấu hình của Transit Gateway.\nMỗi AWS transit gateway attachment chỉ có thể liên kết với một bảng định tuyến nên nếu muốn liên kết attachment đó với bảng định tuyến mới thì chúng ta cần phải xoá liên kết đó đi trước. Khi bạn làm việc với AWS Transit Gateway mà gặp lỗi không thể liên kết một attachment với một bảng định tuyến, hãy kiểm tra xem attachment đó đã được liên kết với bảng định tuyến nào khác chưa.\nAWS Transit Gateway attachment có các loại:\nVPC: Kết nối một VPC với Transit Gateway VPN: Kết nối một VPC connection với Transit Gateway Peering Connection: Kết nối 2 Transit Gateway với nhau Connect: Kết nối SD-WAN appliance hoặc on-premises network với Transit Gateway Trong workshop này chúng ta sẽ sử dụng 2 loại attachment đó là VPC và Peering Connection.\nDưới đây là hình minh hoạ các tài nguyên có thể kết nối với Transit Gateway thông qua attachment. Route table AWS Transit Gateway route table là một thực thể logic chứa tập hợp các tuyến đường (route) xác định cách chuyển tiếp lưu lượng giữa các tài nguyên được kết nối với Transit Gateway. Khi tạo một AWS Transit Gateway mới, một bảng định tuyến mặc định sẽ được tự động tạo ra. Nếu như chúng ta tắt tính năng route table association và route propagation thì AWS sẽ không tạo ra bảng định tuyến mặc định này. Bạn có thể tự tạo thêm các bảng định tuyến cho AWS Transit Gateway.\nMỗi attachment chỉ có thể liên kết với một bảng định tuyến, propagate routes đến một hoặc nhiều bảng định tuyến.\nThis workshop will focus on two types of route tables: Transit Gateway route table và VPC route table.\nTransit Gateway route table: Manages traffic routing between VPCs, on-premises networks, and attachments connected to Transit Gateway. VPC route table: Manages traffic routing within the scope of a single VPC. Trong workshop này chúng ta sẽ làm việc với 2 loại bảng định tuyến đó là Transit Gateway route table và VPC route table.\nTransit Gateway route table: Quản lý việc điều hướng lưu lượng giữa các VPC, on-premises networks, và các attachment được kết nối tới Transit Gateway. VPC route table: Quản lý việc điều hướng lưu lượng trong phạm vi một VPC. Route table association Transit Gateway route table association thiết lập một cơ chế cho phép tựng động quảng bá (propagating) các tuyến đường của một bảng định tuyến đến các attachment đã liên kết (associated), đảm bảo rằng lưu lượng truy cập tìm thấy đích đến mà không cần sự can thiêp thủ công.\nMột transit gateway attachment có thể liên kết với một bảng định tuyến. Một bảng định tuyến có thể liên kết với nhiều attachment.\nKhi một attachment được liên kết với một bảng định tuyến, các route trong bảng định tuyến đó sẽ tự động được propagate tới attachment này. Điều này có nghĩa là các route trong bảng định tuyến sẽ được sử dụng để điều hướng lưu lượng đến và đi tới các tài nguyên kết nối với attachment đó.\nVí dụ: Kết nối VPC và mạng on-premises Giả sử bạn có VPC A đã kết nối đến Transit Gateway bằng VPC A attachment. Bạn tạo một custom Transit Gateway route table và liên kết với VPC A attachment. Trong bảng định tuyến này, bạn thêm một route đến on-premises network (VD: 10.2.0.0/16). Vì VPC A attachment đã liên kết với bảng định tuyến này nên route đến on-premises network tự động được propagate đến nó. Điều này cho phép các tài nguyên trong VPC A kết nối được đến on-premises network thông qua Transit Gateway mặc dù không cấu hình định tuyến từ VPC đến on-premises network. Bạn cũng có thể cấu hình Transit Gateway policy table để kiểm soát và lọc các route được propagate đến một attachment cụ thể. Tuy nhiên để sử dụng tính năng này, bạn cần phải có hiểu biết nhất định về AWS Transit Gateway, chúng ta sẽ không thực hành nó trong workshop này.\nRoute propagation Trong phạm vi AWS Transit Gateway, route propagation đóng vai trò tự động phân phối các tuyến đường từ bảng định tuyến đến các attachment liên quan. Quá trình này hợp lý hóa việc quản lý mạng bằng cách loại bỏ nhu cầu để cấu hình tuyến đường thủ công cho mọi attachment.\nMỗi attachment (VD: VPC, VPN, Direct Connect gateway) đều có sẵn một tập hợp các tuyến đường (route) riêng. Khi một attachment được propagate tới một bảng định tuyến, tất cả các route của attachment sẽ được thêm vào bảng định tuyến này.\nVD: Giả sử bạn có VPC A, VPC B đã kết nối đến Transit Gateway bằng VPC A attachment và VPC B attachment. Bạn tạo một custom Transit Gateway route table và liên kết với VPC A attachment. Sau đó bạn tạo propagation giữa VPC B attachment và route table này. Khi đó route sau sẽ tự động được thêm vào route table:\nDestination Target Route type VPC B CIDR Attachment ID for VPC B Propagated Vì VPC A attachment đã được liên kết với route table này nên route mới được thêm vào sẽ được propagate đến nó. Khi đó VPC A có thể kết nối được đến VPC B thông qua Transit Gateway. Route table association vs. Route propagation Điểm khác biệt chính giữa association và propagation là route table association xác định bảng định tuyến nào được sử dụng cho một attachment cụ thể còn route propagation đảm bảo các tuyến đường (route) trong bảng định tuyến đó được áp dụng cho attachment, cho phép tạo kết nối giữa các tài nguyên.\nHãy tưởng tượng Transit Gateway giống như một thư viện có các giá sách khác nhau, mỗi giá sách là một route table, mỗi quyển sách là một route. Route table association giống như cấp cho ai đó một thẻ thư viện (quyền xem các quyển sách). Route propagation giống như việc cho phép họ mượn sách (quyền sử dụng các quyển sách).\nHãy cùng tìm hiểu ví dụ dưới đây để hiểu rõ hơn về sự khác biệt này.\nGiả sử chúng ta cần phát triển một hệ thống thương mại điện tử sử dụng kiến trúc microservice bao gồm 4 dịch vụ Product, Order, Analyzer và Visualizer. Trong đó vai trò của các dịch vụ như sau:\nProduct: Xử lý các yêu cầu liên quan đến sản phẩm Order: Xử lý các yêu cầu liên quan đến việc mua hàng Analyzer: Thống kê số lượng sản phẩm, số lượng đơn hàng, doanh thu\u0026hellip; Visualizer: Sử dụng dữ liệu từ dịch vụ Analyzer để tạo ra các bảng, biểu đồ Mỗi dịch vụ đã được triển khai trên VPC tương ứng là Product VPC, Order VPC, Analyzer VPC, Visualizer VPC. Tất cả các VPC đều đã được kết nối đến cùng một AWS Transit Gateway bằng các attachment Product Attachment, Order Attachment, Analyzer Attachment, Visualizer Attachment. Để các VPC này kết nối được với nhau, chúng ta cần cấu hình định tuyến.\nVì chúng ta cần release sản phẩm đến tay người dùng sớm nhất có thể cho nên chúng ta ưu tiên release hai dịch vụ Product và Order trước, sau đó tiếp tục phát triển hai dịch vụ Analyzer và Visualizer. Vì dịch vụ Analyzer vẫn đang phát triển nên chưa thể sử dụng thực tế được, do đó chúng ta chưa cần kết nối dịch vụ này với hai dịch vụ đã release. Vì vậy, chúng ta sẽ có hai môi trường là production gồm hai dịch vụ Product, Order và non-production gồm hai dịch vụ Analyzer và Visualizer.\nKhi đó, chúng ta cần cấu hình mạng như sau:\nDịch vụ Product và Order có thể kết nối với nhau Dịch vụ Analyzer và Visualizer có thể kết nối với nhau Các dịch vụ Analyzer, Visualizer không thể kết nối đến các dịch vụ Product và Order Trong trường hợp này, chúng ta không nên sử dụng một bảng định tuyến duy nhất liên kết với tất cả các attachment vì những vấn đề sau:\nSecurity Isolation: Nếu như liên kết tất cả các attachment với cùng một bảng định tuyến thì không thể tách biệt cấu hình bảo mật giữa môi trường production và non-production. Trong nhiều trường hợp cấu hình giữa hai môi trường này khác nhau, nên cách cấu hình này không đủ linh hoạt.\nUnnecessary Propagation: Propagate routes từ các VPC của môi trường production tới các VPC của môi trường non-production là không cần thiết vì các VPC này không cần kết nối đến nhau. Việc cấu hình làm tăng sự phức tạp và có thể làm chậm quá trình định tuyến giữa các mạng với nhau.\nĐể khắc phục được những vấn đề trên, chúng ta có thể tạo hai bảng định tuyến tuỳ chỉnh:\nProductionRTB: liên kết với Product Attachment và Order Attachment NonProductionRTB: liên kết với Analyzer Attachment và Visualizer Attachment Bằng cách này, chúng ta đã chỉ định bảng định tuyến cho các attachment và tách biệt cấu hình giữa môi trường production và non-production. Đây cũng chính là kỹ thuật sử dụng nhiều bảng định tuyến được sử dụng trong các phần tiếp theo.\nGiả sử sau khi phát triển xong, chúng ta muốn kết nối dịch vụ Analyzer đến các dịch vụ Product, Order để thống kê và làm báo cáo doanh thu. Vì dịch vụ Visualizer chỉ cần lấy dữ liệu từ dịch vụ Analyzer nên, chúng ta chỉ cần kết nối Analyzer VPC với Product VPC và Order VPC là đủ. Chúng ta có thể làm điều này một cách dễ dàng bằng việc tạo propagation giữa bảng định tuyến ProductionRTB và Analyzer Attachment. Khi đó, một route mới cho phép định tuyến lưu lượng đến Analyzer Attachment sẽ tự động được tạo và propagate đến các attachment Product và Order. Routes for peering attachments Bạn có thể kết nối hai Transit Gateway với nhau bằng cách peering giống như việc kết nối hai VPC bằng VPC Peering. Để làm được điều đó, bạn cần tạo một peering attachment trong một transit gateway và chỉ định transit gateway còn lại để thiết lập kết nối. Vì peering attachment không hỗ trợ tự động propagate routes cho nên bạn cần phải tạo một tuyến đường tĩnh để định tuyến lưu lượng. Lưu lượng sau khi được định tuyến đến peered transit gateway có thể tiếp tục được định tuyến tới các attachment kết nối với transit gateway đó. "
},
{
	"uri": "//localhost:1313/vi/4-single-account-cross-region/4.2-configure-route-tables/",
	"title": "Cấu hình định tuyến",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cấu hình định tuyến để kết nối Share VPC với Branch VPC.\n1. Tại giao diện Transit gateways của region Tokyo, chọn tokyo-tgw rồi sao chép id của transit gateway này 2. Tại giao diện Transit gateway attachments của region Singapore, bấm Create transit gateway attachment Điền các thông tin cấu hình như sau:\nName tag: peering-tokyo Transit gateway ID: Chọn singapore-tgw Attachment Type: Peering connection Account: My account Region: Tokyo Transit gateway (accepter): ID của transit gateway tokyo-tgw đã sao chép ở bước 1 3. Quay lại giao diện Transit gateway attachments của region Tokyo sẽ thấy có một attachment đang ở trạng thái Pending Acceptance.\nĐổi tên của attachment này thành peering-singapore rồi chọn Actions sau đó bấm Accept transit gateway attachment 4. Cấu hình peering giữa 2 transit gateways\nQuay lại giao diện Transit gateway route tables của region Singapore, chọn branch-tgw-rtb rồi chọn tab Routes sau đó bấm Create static route Điền CIDR là 10.3.0.0/16 (CIDR của Share VPC) rồi chọn peering-tokyo attachment. Lặp lại bước trên với share-tgw-rtb của region Tokyo, điền CIDR là 10.4.0.0/16 (CIDR của Branch VPC) rồi chọn peering-singapore attachment. Sau khi tạo xong thì sẽ có một static route mới với type là Peering như sau: 5. Cấu hình bảng định tuyến cho từng transit gateway\nTạo một transit gateway route table mới trong region Singapore tên là peering-tokyo-tgw-rtb và gắn vào singapore-tgw transit gateway. Tạo association giữa peering-tokyo-tgw-rtb và peering-tokyo attachment. Tạo propagation từ peering-tokyo-tgw-rtb đến branch-att attachment. Lặp lại các bước trên để tạo một transit gateway route table mới trong region Tokyo tên là peering-singapore-tgw-rtb và thêm association với peering-singapore, propagation tới share-att như sau: Khi bạn tạo associate với peering-singapore attachment, có thể bạn sẽ gặp lỗi như sau. Nguyên nhân là vì hiện tại attachment này đang được associate với default-tgw-rtb, bạn cần phải xoá association này trước rồi mới tạo được association mới.\nXoá association giữa peering-singapore attachment và bảng định tuyến default-tgw-rtb. Tạo lại association giữa peering-singapore attachment và bảng định tuyến peering-singapore-tgw-rtb. Tạo propagation từ peering-singapore-tgw-rtb tới share-att. 6. Cấu hình bảng định tuyến của các VPC\nTại giao diện Route tables của region Tokyo, chọn share-rtb sau đó chọn tab Routes rồi bấm Edit routes Thêm một route mới với destination là 10.4.0.0/16 và target là share-att Lặp lại các bước trên để thêm route mới cho branch-rtb route table trong region Singapore với destination là 10.3.0.0/16 và target là branch-att. 7. Kiểm tra kết nối giữa các máy ảo\nChúng ta sẽ thử kết nối từ máy ảo share của region Tokyo với máy ảo branch của region Singapore để kiểm tra xem Share VPC và Branch VPC đã kết nối được với nhau chưa.\nTại giao diện EC2 của region Singapore, sao chép private IPv4 của máy ảo branch Kết nối đến máy ảo share bằng EC2 instance connect như các phần trước rồi chạy lệnh sau:\nping \u0026lt;branch_instance_private_ipv4\u0026gt; -c5 Kết quả cho thấy chúng ta đã cấu hình thành công. Tự thực hành Hãy thử lặp lại các bước trên để cấu hình kết nối giữa Test VPC và Branch VPC và kiểm tra cấu hình của bạn. "
},
{
	"uri": "//localhost:1313/vi/2-preparation/",
	"title": "Chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Chuẩn bị Hãy tải tệp này về máy tính của bạn để chuẩn bị cho các bước tiếp theo. CloudFormation Templates\rAWSTransitGatewayWorkshop.zip\r(2 ko)\rTrong các bước tiếp theo, chúng ta sẽ cùng triển khai các tài nguyên trên 2 region là ap-northeast-1 (Tokyo) và ap-southeast-1 (Singapore). Trong đó ap-northeast-1 (Tokyo) là region chính. Bạn có thể chọn bất kỳ region nào khác phù hợp.\n"
},
{
	"uri": "//localhost:1313/vi/3-single-account-single-region/3.2-create-attachments/",
	"title": "Tạo transit gateway và các attachment",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cùng tạo AWS Transit Gateway và các attachment sau đó kết nối với các VPC đã tạo ở bước trước.\n1. Tìm kiếm từ khoá vpc rồi chọn service VPC 2. Tạo AWS Transit Gateway\nTại giao diện của VPC chọn Transit gateways Bấm Create transit gateway Điền các thông tin như sau rồi bấm Create transit gateway Name tag: tokyo-tgw Description: Transit Gateway for region Tokyo 3. Tạo attachments Sau khi Transit Gateway vừa tạo có trạng thái sẵn sàng, bạn có thể tạo các attachment.\nTại giao diện của VPC chọn Transit gateway attachments Bấm Create transit gateway attachment Điền các thông tin như sau: Name tag: dev-att Transit gateay ID: tokyo-tgw Attachment type: VPC VPC ID: dev-vpc Bấm Create transit gateway attachment Lặp lại bước trên để tạo thêm 2 transit gateway attachment nữa với cấu hình như sau:\ntest-att attachment gắn với test-vpc VPC share-att attachment gắn với share-vpc VPC Sau khi tạo xong chúng ta sẽ có các attachment như sau. "
},
{
	"uri": "//localhost:1313/vi/3-single-account-single-region/",
	"title": "Cùng tài khoản - Cùng Region",
	"tags": [],
	"description": "",
	"content": "Trong phần này, chúng ta sẽ cùng cấu hình AWS Transit Gateway kết nối các VPC trong cùng một tài khoản AWS và cùng một region.\nTình huống: Bạn là DevOps Engineer của công ty khởi nghiệp X. Công ty của bạn đang phát triển một hệ thống chuẩn bị triển khai trên AWS. Công ty bạn mới thành lập nên không có quá nhiều vốn, vì vậy bạn được giao nhiệm vụ triển khai hệ thống lên hai môi trường khác nhau là Dev và Test với mức chi phí hợp lý. Vì hai môi trường này chỉ dùng để phục vụ cho quá trình phát triển nên bạn có thể dùng chung các tài nguyên giữa hai môi trường.\nVới những yêu cầu trên, bạn quyết định sẽ triển khai 3 VPCs là Dev, Test và Share trong cùng một region. Trong đó Share VPC chứa các tài nguyên có thể dùng trong cả hai môi trường Dev và Test như database, cache. Khi đó, bạn cần phải cấu hình để Dev VPC và Test VPC kết nối được đến Share VPC.\nVới những trường hợp cần kết nối ít VPC như vậy, sử dụng VPC Peering có lẽ là lựa chọn tốt hơn. Trong workshop này chúng ta sẽ cùng tìm hiểu một cách cấu hình khác đó là sử dụng AWS Transit Gateway. Để cho việc triển khai đơn giản hơn, chúng ta sẽ chỉ triển khai một máy ảo EC2 trong mỗi VPC để kiểm tra kết nối mạng. Trong phần này, chúng ta sẽ cùng cấu hình mạng như sau: Nội dung Chuẩn bị Tạo transit gateway attachments Một bảng định tuyến Nhiều bảng định tuyến "
},
{
	"uri": "//localhost:1313/vi/3-single-account-single-region/3.3-single-route-table/",
	"title": "Một bảng định tuyến",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cấu hình định tuyến Dev VPC, Test VPC để kết nối tới Share VPC chỉ sử dụng bảng định tuyến mặc định.\nKiểm tra kết nối giữa các máy ảo 1. Kết nối đến máy ảo dev\nTruy cập dịch vụ EC2 rồi chọn Instances, sau đó chọn máy ảo dev Bấm Connect Giữ nguyên các cấu hình mặc định rồi bấm Connect 2. Kiểm tra kết nối từ máy ảo dev đến share\nQuay lại giao diện danh sách các máy ảo rồi chọn máy ảo share Sao chép private IPv4 của máy ảo này Quay lại giao diện EC2 instance connect của dev instance rồi chạy lệnh sau: ping \u0026lt;share_instance_private_ipv4\u0026gt; -c5 Sau một khoảng thời gian đợi thì ta nhận được kết quả báo không thể kết nối đến máy ảo share. Nguyên nhân là vì 2 máy ảo này đang nằm trong 2 VPC chưa được kết nối với nhau. Cấu hình định tuyến cho Dev VPC 1. Cấu hình bảng định tuyến cho Dev VPC\nQuay lại giao diện của VPC, chọn Route tables\nChọn dev-rtb\nChọn tab Routes rồi bấm Edit routes Thêm một route mới với destination là 10.3.0.0/16 (CIDR của Share VPC), phần target thì chọn Transit Gateway rồi chọn dev-att sau đó bấm Save changes 2. Cấu hình bảng định tuyến cho share-vpc VPC bằng cách lặp lại bước trên 3. Kiểm tra lại kết nối\nQuay lại giao diện EC2 instance connect rồi chạy lại lệnh sau: ping \u0026lt;private_ipv4_share_instance\u0026gt; -c5 Kết quả cho thấy đã có thể kết nối từ máy ảo dev đến máy ảo share chứng tỏ Dev VPC và Share VPC đã kết nối được với nhau thông qua transit gateway. Cấu hình bảng định tuyến cho Test VPC Lặp lại các bước trên để cấu hình bảng định tuyến cho test-vpc VPC. Sau khi cấu hình xong, bạn có thể kiểm tra cấu hình của mình bằng cách kết nối từ máy ảo test đến máy ảo share như sau. "
},
{
	"uri": "//localhost:1313/vi/4-single-account-cross-region/",
	"title": "Cùng tài khoản - Khác Region",
	"tags": [],
	"description": "",
	"content": "Trong phần này, chúng ta sẽ cùng cấu hình AWS Transit Gateway kết nối các VPC trong cùng một tài khoản AWS nhưng khác region.\nTình huống: Sau một thời gian, công ty bạn phát triển và bắt đầu mở chi nhánh thứ hai ở một nước khác. Sản phẩm đầu tiên của chi nhánh này là một website được thiết kế với mục đích marketing. Website này cần lấy dữ liệu từ database để thống kê, làm báo cáo về những con số ấn tượng mà công ty bạn đã đạt được. Vì chi nhánh mới thành lập cho nên chưa có nhiều kỹ sư, bạn được giao nhiệm vụ hỗ trợ đội phát triển chuẩn bị môi trường triển khai sản phẩm trên AWS. Để tiết kiệm thời gian và chi phí, bạn muốn sử dụng Share VPC để chia sẻ database và cache giống như phần trước.\nChi nhánh đó đã chuẩn bị sẵn một VPC tên là Branch và một Transit Gateway. Việc của bạn là kết nối Branch VPC với Share VPC để chia sẻ tài nguyên. Tương tự như phần trước, bạn hoàn toàn có thể sử dụng VPC Peering. Nhưng trong phần này, chúng ta sẽ cùng tìm hiểu một cách cấu hình khác đó là dùng AWS Transit Gateway. Khi đó, cấu hình mạng của bạn sẽ trông như sau: Trông sơ đồ này rất phức tạp phải không, hãy sử dụng những kiến thức về Route table association và Route propagation trong phần giới thiệu để giải thích đồ này. Hãy hiểu đơn giản là lưu lượng truy cập sẽ đi từ Share VPC đến Tokyo TGW rồi sau đó đi tới Singapore TGW thông qua Peering Attachment. Sau khi lưu lượng truy cập đến được đây thì nó sẽ tiếp tục được định tuyến đến Branch VPC.\nNội dung Chuẩn bị Cấu hình định tuyến "
},
{
	"uri": "//localhost:1313/vi/3-single-account-single-region/3.4-multiple-route-tables/",
	"title": "Nhiều bảng định tuyến",
	"tags": [],
	"description": "",
	"content": "Từ bước này trở đi, chúng ta sẽ chuyển cấu hình của AWS Transit Gateway từ việc sử dụng một bảng định tuyến sang sử dụng nhiều bảng định tuyến.\nNhư đã đề cập ở phần trước, mỗi attachment mới được tạo ra sẽ tự động liên kết với bảng định tuyến mặc định. Mặc dù điều này giúp đơn giản hoá việc cấu hình, nó cũng khiến cho bảng định tuyến trở nên phức tạp, khó quản lý và theo dõi khi số lượng attachment và route tăng lên. Ngoài ra, vì tất cả các attachment đều có association và propagation nên tất cả các attachment kết nối đến cùng Transit Gateway đều có thể định tuyến đến các attachment khác. Trong nhiều trường hợp, bạn sẽ không muốn như vậy mà muốn nhiều quyền kiểm soát việc điều hướng lưu lượng cho từng thành phần trong mạng. Để làm được như vậy bạn có thể sử dụng nhiều bảng định tuyến, mỗi bảng định tuyến chỉ liên kết với một attachment hoặc sử dụng Transit Gateway policy table.\nCấu hình định tuyến 1. Xoá liên kết giữa các transit gateway attachment và bảng định tuyến mặc định\nTại giao diện VPC chọn Transit gateway route tables Chọn transit gateway route table duy nhất rồi sửa tên thành default-tgw-rtb Chọn tab Associations Chọn một liên kết bất kỳ rồi bấm Delete association Tiếp tục xoá các liên kết còn lại cho đến khi hết 2. Kiểm tra kết nối từ máy ảo dev đến máy ảo share Quay lại giao diện EC2 instance connect của máy ảo dev rồi thử kết nối đến máy ảo share ta sẽ thấy không thể kết nối đến được nữa. Nguyên nhân là vì chúng ta đã xoá liên kết giữa các transit gateway attachment với bảng định tuyến mặc định mà chưa cấu hình các bảng định tuyến mới. 3. Tạo các bảng định tuyến mới\nTại giao diện transit gateway route tables, bấm Create transit gateway route table Điền tên cho bảng định tuyến mới là dev-tgw-rtb\nChọn transit gateway cho bảng định tuyến rồi bấm Create transit gateway route table Lặp lại các bước trên để tạo thêm 2 bảng định tuyến mới là test-tgw-rtb và share-tgw-rtb như sau 4. Tạo liên kết mới cho các transit gateway attachment\nTại giao diện transit gateway route tables, chọn dev-tgw-rtb\nChọn tab Associations\nBấm Create association Chọn dev-att rồi bấm Create association Lặp lại các bước trên để tạo liên kết của test-tgw-rtb và share-tgw-rtb như sau 5. Tạo propagation\nTại giao diện transit gateway route tables, chọn dev-tgw-rtb\nChọn tab Propagations rồi bấm Create propagation Chọn share-att rồi bấm Create propagation Sau khi tạo xong propagation thì sẽ có một route tự động được tạo như sau Làm tương tự để tạo propagation từ share-tgw-rtb tới dev-att 6. Kiểm tra kết nối từ máy ảo dev tới máy ảo share Tự thực hành Lặp lại các bước trên để cấu hình kết nối từ test instance đến share instance rồi kiểm tra kết quả của bạn. "
},
{
	"uri": "//localhost:1313/vi/5-cleanup/",
	"title": "Xoá tài nguyên",
	"tags": [],
	"description": "",
	"content": "Sau khi thực hành xong workshop này, bạn cần phải xoá các tài nguyên đã tạo nếu không thì sẽ bị tính phí. Hãy xoá cẩn thận và kiểm tra lại sau khi xoá vì Transit Gateway là tài nguyên tương đối đắt, nếu bạn quên không xoá transit gateway thì nó có thể sẽ tốn khá nhiều tiền.\nHãy xoá các tài nguyên theo thứ tự dưới đây trong cả hai region Tokyo và Singapore.\nNếu bạn không thực hiện các phần 5 và 6:\nXoá toàn bộ transit gateway attachment Xoá transit gateway Xoá CloudFormation Stack Xoá các S3 bucket có tên giống với định dạng cf-templates-* (Đây là các S3 bucket được AWS tự động tạo ra để lưu trữ các tệp CloudFormation template của bạn) Nếu bạn thực hiện các phần 5 và 6:\nTài khoản thứ nhất: Xoá share resource trong dịch vụ AWS RAM Tài khoản thứ hai: Xoá toàn bộ transit gateway attachment Xoá transit gateway Xoá CloudFormation Stack Xoá các S3 bucket có tên giống với định dạng cf-templates-* "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]